var L=Object.defineProperty,v=Object.defineProperties;var w=Object.getOwnPropertyDescriptors;var u=Object.getOwnPropertySymbols;var I=Object.prototype.hasOwnProperty,R=Object.prototype.propertyIsEnumerable;var h=(e,t,s)=>t in e?L(e,t,{enumerable:!0,configurable:!0,writable:!0,value:s}):e[t]=s,d=(e,t)=>{for(var s in t||(t={}))I.call(t,s)&&h(e,s,t[s]);if(u)for(var s of u(t))R.call(t,s)&&h(e,s,t[s]);return e},g=(e,t)=>v(e,w(t));import m from"path";import{promises as $}from"fs";import D from"less";import y from"fs";import a from"path";var O=/@import.*?["']([^"']+)["'].*?/,C=/@import.*?["']([^"']+)["'].*?/g,E=/(?:\/\*(?:[\s\S]*?)\*\/)|(\/\/(?:.*)$)/gm,P=[".css",".less"],l=e=>{try{let t=a.dirname(e),o=(y.readFileSync(e).toString("utf8").replace(E,"").match(C)||[]).map(r=>r.match(O)[1]).filter(r=>!!r).map(r=>a.resolve(t,a.extname(r)?r:`${r}.less`));return o.reduce((r,f)=>[...r,...l(f)],o).filter(r=>P.includes(a.extname(r).toLowerCase()))}catch(t){return[]}},x=e=>{let t=e.extract.filter(c=>c),s=t.length===3?t[1]:t[0];return{text:e.message,location:{namespace:"file",file:e.filename,line:e.line,column:e.column,lineText:s}}};var q=(e={},t={})=>({name:"less-loader",setup:s=>{let c=t.filter;s.onResolve({filter:c||/\.less$/,namespace:"file"},n=>{let o=m.resolve(process.cwd(),m.relative(process.cwd(),n.resolveDir),n.path);return{path:o,watchFiles:s.initialOptions.watch?[o,...l(o)]:void 0}}),s.onLoad({filter:c||/\.less$/,namespace:"file"},async n=>{let o=await $.readFile(n.path,"utf-8"),i=m.dirname(n.path),p=g(d({filename:n.path,relativeUrls:!0},e),{paths:[...e.paths||[],i]});try{return{contents:(await D.render(o,p)).css,loader:"css",resolveDir:i}}catch(r){return{errors:[x(r)],resolveDir:i}}})}});export{q as lessLoader};
